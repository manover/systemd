--- a/src/dbus1-generator/dbus1-generator.c
+++ b/src/dbus1-generator/dbus1-generator.c
@@ -259,24 +259,91 @@ static int link_busnames_target(const ch
         return 0;
 }

-static int link_compatibility(const char *units) {
-        const char *f, *t;
+static int link_compatibility(const char *units, bool system) {
+        const char *service, *socket, *path, *kd_path;
+        FILE *fl;
+        int r;
+
+        service = strjoina(arg_dest, "/" SPECIAL_DBUS_SERVICE);
+        fl = fopen(service, "wxe");
+
+        if (system) {
+                kd_path = "0-system";
+                path = "/var/run/dbus/system_bus_socket";
+        } else {
+                /* If not system, then user */
+                kd_path = "%U-user";
+                path = "%t/bus";
+        }

-        f = strjoina(units, "/systemd-bus-proxyd.socket");
-        t = strjoina(arg_dest, "/" SPECIAL_DBUS_SOCKET);
-        mkdir_parents_label(t, 0755);
-        if (symlink(f, t) < 0)
-                return log_error_errno(errno, "Failed to create symlink %s: %m", t);
-
-        f = strjoina(units, "/systemd-bus-proxyd.socket");
-        t = strjoina(arg_dest, "/" SPECIAL_SOCKETS_TARGET ".wants/systemd-bus-proxyd.socket");
-        mkdir_parents_label(t, 0755);
-        if (symlink(f, t) < 0)
-                return log_error_errno(errno, "Failed to create symlink %s: %m", t);
-
-        t = strjoina(arg_dest, "/" SPECIAL_DBUS_SERVICE);
-        if (symlink("/dev/null", t) < 0)
-                return log_error_errno(errno, "Failed to mask %s: %m", t);
+        if (!fl)
+                return log_error_errno(errno, "Failed to create %s: %m", service);
+        fprintf(fl,
+                "# Automatically generated by systemd-dbus1-generator\n"
+                "[Unit]\n"
+                "Description=Legacy D-Bus Protocol Compatibility Daemon\n"
+                "Documentation=man:systemd-dbus1-generator(8)\n"
+                "Wants=dbus.socket\n\n");
+        if (system)
+                fprintf(fl, "DefaultDependencies=no\n");
+	fprintf(fl,
+                "[Service]\n"
+                "Type=simple\n"
+                "ExecStart=/lib/systemd/systemd-bus-proxyd --address=kernel:path=/sys/fs/kdbus/%s/bus\n",
+		kd_path);
+        if (system)
+                fprintf(fl,
+                        "NotifyAccess=main\n\n"
+                        "CapabilityBoundingSet=CAP_IPC_OWNER CAP_SETUID CAP_SETGID CAP_SETPCAP CAP_MAC_ADMIN\n\n"
+                        "PrivateDevices=yes\n"
+                        "PrivateNetwork=yes\n");
+        fprintf(fl,
+                "PrivateTmp=yes\n"
+                "ProtectSystem=full\n"
+                "ProtectHome=yes\n\n"
+                "[Install]\n"
+                "Also=dbus.socket\n"
+                "Alias=systemd-bus-proxyd.service\n");
+
+        r = fflush_and_check(fl);
+        if (r < 0)
+                return log_error_errno(r, "Failed to write %s: %m", service);
+        fclose(fl);
+        fl = NULL;
+
+        socket = strjoina(arg_dest, "/" SPECIAL_DBUS_SOCKET);
+        fl = fopen(socket, "wxe");
+        if (!fl)
+                return log_error_errno(errno, "Failed to create %s: %m", socket);
+        fprintf(fl,
+                "# Automatically generated by systemd-dbus1-generator\n"
+                "[Unit]\n"
+                "Description=Legacy D-Bus Protocol Compatibility Socket\n"
+                "Documentation=man:systemd-dbus1-generator(8)\n"
+                "DefaultDependencies=no\n\n"
+                "[Socket]\n"
+                "ListenStream=%s\n\n"
+                "[Install]\n"
+                "WantedBy=sysinit.target\n"
+                "Alias=systemd-bus-proxyd.socket\n",
+                path);
+        r = fflush_and_check(fl);
+        if (r < 0)
+                return log_error_errno(r, "Failed to write %s: %m", socket);
+        fclose(fl);
+        fl = NULL;
+
+        service = strjoina(arg_dest, "/" SPECIAL_BASIC_TARGET ".wants/" SPECIAL_DBUS_SERVICE);
+        if (symlink("../" SPECIAL_DBUS_SERVICE, service) < 0)
+                return log_error_errno(errno, "Failed to create symlink %s: %m", service);
+
+        service = strjoina(arg_dest, "/systemd-bus-proxyd.service");
+        socket = strjoina(arg_dest, "/systemd-bus-proxyd.socket");
+
+        if (symlink(SPECIAL_DBUS_SERVICE, service) < 0)
+                return log_error_errno(errno, "Failed to create symlink %s: %m", service);
+        if (symlink(SPECIAL_DBUS_SOCKET, socket) < 0)
+                return log_error_errno(errno, "Failed to create symlink %s: %m", socket);

         return 0;
 }
@@ -304,6 +371,7 @@ int main(int argc, char *argv[]) {
         if (!is_kdbus_available())
                 return 0;

+
         r = cg_pid_get_owner_uid(0, NULL);
         if (r >= 0) {
                 path = "/usr/share/dbus-1/services";
@@ -323,7 +391,7 @@ int main(int argc, char *argv[]) {
         if (q < 0)
                 r = q;

-        q = link_compatibility(units);
+        q = link_compatibility(units, streq(type, "system"));
         if (q < 0)
                 r = q;
